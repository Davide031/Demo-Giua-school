name: Build

on:
  push:
    branches: [ master ]
  release:
    types: [ published ]

jobs:

  build:
    name: Build and create a release
    runs-on: ubuntu-latest
    steps:

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish image on push event
        uses: docker/build-push-action@v2
        if: github.event_name == 'push'
        with:
          context: .
          file: tests/docker/Dockerfile
          push: true
          tags: |
            trinkodok/giuaschool:latest
            ghcr.io/trinko/giuaschool:latest

      - name: Build and publish image on release event
        uses: docker/build-push-action@v2
        if: github.event_name == 'release'
        with:
          context: .
          file: tests/docker/Dockerfile
          push: true
          tags: |
            trinkodok/giuaschool:latest
            trinkodok/giuaschool:${{ github.event.release.tag_name }}
            ghcr.io/trinko/giuaschool:latest
            ghcr.io/trinko/giuaschool:${{ github.event.release.tag_name }}

      - name: Archive release
        run: |
          docker run --name "gs_release" ghcr.io/trinko/giuaschool:latest tests/docker/entrypoint-release.sh
          docker cp gs_release:/var/www/giuaschool/giuaschool-release.zip giuaschool-release.zip

      - name: Upload ZIP release as artifact
        uses: actions/upload-artifact@v2
        if: github.event_name == 'push'
        with:
          name: release-zip
          path: giuaschool-release.zip

      - name: Get the version
        id: get_version
        if: github.event_name == 'release'
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Publish release code
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: giuaschool-release.zip
          asset_name: giuaschool-${{ VERSION }}.zip
          tag: ${{ github.event.release.tag_name }}
