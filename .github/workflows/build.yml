name: Build

on:
  push:
    branches: [ master ]
  workflow_run:
    workflows: [ "Release" ]
    types: [ completed ]

jobs:

  build:
    name: Build and create a release
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event.workflow_run.conclusion == 'success' }}
    steps:

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and publish image on push event
        uses: docker/build-push-action@v2
        if: github.event_name == 'push'
        with:
          context: .
          file: tests/docker/Dockerfile
          push: true
          tags: |
            trinkodok/giuaschool:latest
            ghcr.io/trinko/giuaschool:latest

      - name: Get latest release tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
        if: github.event_name == 'workflow_run'

      - name: Build and publish image on release event
        uses: docker/build-push-action@v2
        if: github.event_name == 'workflow_run'
        with:
          context: .
          file: tests/docker/Dockerfile
          push: true
          tags: |
            trinkodok/giuaschool:latest
            trinkodok/giuaschool:${{ steps.get-latest-tag.outputs.tag }}
            ghcr.io/trinko/giuaschool:latest
            ghcr.io/trinko/giuaschool:${{ steps.get-latest-tag.outputs.tag }}

      - name: Archive release
        run: |
          docker run --name "gs_release" ghcr.io/trinko/giuaschool:latest tests/docker/entrypoint-release.sh
          docker cp gs_release:/var/www/giuaschool/giuaschool-release.zip giuaschool-release.zip
          mkdir builds
          cp giuaschool-release.zip builds/giuaschool-build-latest.zip

      - name: Upload latest build
        uses: EndBug/add-and-commit@v7
        if: github.event_name == 'push'
        with:
          add: builds/giuaschool-build-latest.zip --force
          branch: builds
          branch_mode: create
          push: '--force --set-upstream origin builds'
          pull: 'NO-PULL'
          default_author: github_actor
          message: 'Upload latest build'

      - name: Publish latest release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'workflow_run'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: giuaschool-release.zip
          asset_name: giuaschool-release-latest.zip
          tag: ${{ steps.get-latest-tag.outputs.tag }}

      - name: Generate changelog
        id: changelog
        uses: metcalfc/changelog-generator@v3.0.0
        if: github.event_name == 'push'
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create changelog page
        if: github.event_name == 'push'
        run: |
          mkdir docs
          echo "---" > docs/latest-release.md
          echo "layout: default" >> docs/latest-release.md
          echo "lang: it" >> docs/latest-release.md
          echo "description: 'giua@school: informazioni sull\'ultima versione rilasciata'" >> docs/latest-release.md
          echo "title: 'Ultima versione'" >> docs/latest-release.md
          echo "nav_order: 888" >> docs/latest-release.md
          echo "---" >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "# giua@school Versione ${{ github.event.inputs.version }}"  >> docs/latest-release.md
          echo "{: .text-center .fw-400}" >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "Data e ora del rilascio: ${date +'%d/%m/%Y %H:%M'}" >> docs/latest-release.md
          echo "" >> docs/latest-release.md
          echo "Lista delle modifiche:" >> docs/latest-release.md
          set -o noglob
          log=$(cat << "EOF"
          ${{ steps.changelog.outputs.changelog }}
          EOF
          )
          log="${log//'%'/'%25'}"
          log="${log//$'\n'/'%0A'}"
          log="${log//$'\r'/'%0D'}"
          echo "$log"  >> docs/latest-release.md

      - name: Add page and commit
        uses: EndBug/add-and-commit@v7
        if: github.event_name == 'push'
        with:
          add: docs/latest-release.md --force
          branch: gh-pages
          branch_mode: create
          push: '--force --set-upstream origin gh-pages'
          pull: 'NO-PULL'
          default_author: github_actor
          message: 'Create gh-page'
